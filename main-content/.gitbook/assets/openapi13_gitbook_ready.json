{
  "openapi": "3.1.0",
  "info": {
    "title": "SN13 - On-Demand Data API",
    "description": "API for Subnet 13 of Macrocosmos.\n\nThis API enables:\n- On-demand scraping from X (Twitter) and Reddit\n- Task creation to incentivize miners to fetch specific data\n- Retrieval of Hugging Face repositories deployed by SN13 miners\n- Label and age-based metadata insights\n\nPrimary usage: request and aggregate decentralized social data in real time.",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/on_demand_data_request": {
      "post": {
        "summary": "Query Data",
        "description": "Handle data queries targeting multiple miners with validation and incentives.\nNow supports enhanced X content with rich metadata.",
        "operationId": "query_data_api_v1_on_demand_data_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/query_bucket/{source}": {
      "get": {
        "summary": "Query Bucket",
        "operationId": "query_bucket_api_v1_query_bucket__source__get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Label"
            }
          },
          {
            "name": "start_bucket",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Bucket"
            }
          },
          {
            "name": "end_bucket",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Bucket"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/list_repo_names": {
      "get": {
        "summary": "List Hf Repo Names",
        "description": "Returns a list of repository names from the hf_validation.parquet file,\nexcluding \"no_dataset_provided\".",
        "operationId": "list_hf_repo_names_api_v1_list_repo_names_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HfReposResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/get_top_labels_by_source/{source}": {
      "get": {
        "summary": "Get Label Sizes",
        "description": "Get content size information by label for a specific source",
        "operationId": "get_label_sizes_api_v1_get_top_labels_by_source__source__get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelSize"
                  },
                  "title": "Response Get Label Sizes Api V1 Get Top Labels By Source  Source  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ages": {
      "get": {
        "summary": "Get Age Sizes",
        "description": "Get content size information by age bucket for a specific source from Miner and MinerIndex validator tables",
        "operationId": "get_age_sizes_api_v1_ages_get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgeSize"
                  },
                  "title": "Response Get Age Sizes Api V1 Ages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/set_desirabilities": {
      "post": {
        "summary": "Set Desirabilities",
        "operationId": "set_desirabilities_api_v1_set_desirabilities_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DesirabilityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/get_desirabilities": {
      "get": {
        "summary": "Get Desirability List",
        "description": "If hotkey specified, return the current unscaled json submission for a specific validator hotkey. \nOtherwise, return the current aggregate desirability list.",
        "operationId": "get_desirability_list_api_v1_get_desirabilities_get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "hotkey",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Hotkey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/get_bytes_by_label": {
      "get": {
        "summary": "Get Bytes By Label",
        "description": "Returns the total sum of contentSizeBytes and adjusted bytes for the given label.",
        "operationId": "get_bytes_by_label_api_v1_get_bytes_by_label_get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "label",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Label"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelBytes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/monitoring/system-status": {
      "get": {
        "summary": "System Health Check",
        "description": "Internal health check endpoint for monitoring",
        "operationId": "system_health_check_api_v1_monitoring_system_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/keys": {
      "get": {
        "tags": [
          "key management"
        ],
        "summary": "List Api Keys",
        "description": "List all API keys (requires master key)",
        "operationId": "list_api_keys_api_v1_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "key management"
        ],
        "summary": "Create Api Key",
        "description": "Create new API key (requires master key)",
        "operationId": "create_api_key_api_v1_keys_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/keys/{key}/deactivate": {
      "post": {
        "tags": [
          "key management"
        ],
        "summary": "Deactivate Api Key",
        "description": "Deactivate an API key (requires master key)",
        "operationId": "deactivate_api_key_api_v1_keys__key__deactivate_post",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIKeyCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "APIKeyCreate"
      },
      "APIKeyResponse": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "key",
          "name"
        ],
        "title": "APIKeyResponse"
      },
      "AgeSize": {
        "properties": {
          "time_bucket_id": {
            "type": "integer",
            "title": "Time Bucket Id"
          },
          "content_size_bytes": {
            "type": "integer",
            "title": "Content Size Bytes"
          },
          "adj_content_size_bytes": {
            "type": "integer",
            "title": "Adj Content Size Bytes"
          }
        },
        "type": "object",
        "required": [
          "time_bucket_id",
          "content_size_bytes",
          "adj_content_size_bytes"
        ],
        "title": "AgeSize",
        "description": "Content size information for a specific time bucket"
      },
      "DesirabilityRequest": {
        "properties": {
          "desirabilities": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Desirabilities",
            "description": "List of source items with label weights"
          }
        },
        "type": "object",
        "required": [
          "desirabilities"
        ],
        "title": "DesirabilityRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Current UTC timestamp"
          },
          "miners_available": {
            "type": "integer",
            "title": "Miners Available",
            "description": "Number of available miners"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "API version",
            "default": "1.0.0"
          },
          "netuid": {
            "type": "integer",
            "title": "Netuid",
            "description": "Network UID"
          },
          "hotkey": {
            "type": "string",
            "title": "Hotkey",
            "description": "Validator hotkey address"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "miners_available",
          "netuid",
          "hotkey"
        ],
        "title": "HealthResponse",
        "description": "Response model for health check"
      },
      "HfReposResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "repo_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Repo Names"
          }
        },
        "type": "object",
        "required": [
          "count",
          "repo_names"
        ],
        "title": "HfReposResponse"
      },
      "LabelBytes": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "total_bytes": {
            "type": "integer",
            "title": "Total Bytes"
          },
          "adj_total_bytes": {
            "type": "number",
            "title": "Adj Total Bytes"
          }
        },
        "type": "object",
        "required": [
          "label",
          "total_bytes",
          "adj_total_bytes"
        ],
        "title": "LabelBytes",
        "description": "Byte size information for a particular label"
      },
      "LabelSize": {
        "properties": {
          "label_value": {
            "type": "string",
            "title": "Label Value"
          },
          "content_size_bytes": {
            "type": "integer",
            "title": "Content Size Bytes"
          },
          "adj_content_size_bytes": {
            "type": "integer",
            "title": "Adj Content Size Bytes"
          }
        },
        "type": "object",
        "required": [
          "label_value",
          "content_size_bytes",
          "adj_content_size_bytes"
        ],
        "title": "LabelSize",
        "description": "Content size information for a specific label"
      },
      "QueryRequest": {
        "properties": {
          "source": {
            "type": "string",
            "title": "Source",
            "description": "Data source (x or reddit)"
          },
          "usernames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Usernames",
            "description": "List of usernames to fetch data from"
          },
          "keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 5,
            "title": "Keywords",
            "description": "List of keywords to search for"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Start date (ISO format)"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "End date (ISO format)"
          },
          "limit": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum number of items to return",
            "default": 100
          }
        },
        "type": "object",
        "required": [
          "source"
        ],
        "title": "QueryRequest",
        "description": "Request model for data queries"
      },
      "QueryResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Request status (success/error)"
          },
          "data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Data"
          },
          "meta": {
            "type": "object",
            "title": "Meta",
            "description": "Additional metadata about the request"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "QueryResponse",
        "description": "Response model for data queries"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  },
  "servers": [
    {
      "url": "https://sn13.api.macrocosmos.ai",
      "description": "SN13 Production Server"
    }
  ]
}