{
  "openapi": "3.1.0",
  "info": {
    "title": "Validator API",
    "description": "API for interacting with the validator network and miners",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://sn1.api.macrocosmos.ai",
      "description": "Macrocosmos API Production Server"
    }
  ],
  "paths": {
    "/v1/chat/completions": {
      "post": {
        "tags": [
          "GPT Endpoints"
        ],
        "summary": "Chat completions endpoint",
        "description": "Main endpoint that handles both regular, multi step reasoning, test time inference, and mixture of miners chat completion.",
        "operationId": "completions_v1_chat_completions_post",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api-Key"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with streaming text",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "id": "ca0b8681-7b78-4234-8868-71ad1ebfa9ed",
                  "choices": [
                    {
                      "finish_reason": "stop",
                      "index": 0,
                      "logprobs": null,
                      "message": {
                        "content": "Neural networks are a type of machine learning model inspired by the human brain's structure. They consist of interconnected nodes arranged in layers, including input, hidden, and output layers. These networks learn by adjusting weights during training using optimization algorithms. Neural networks find applications in image recognition, speech processing, and many other domains requiring pattern recognition and prediction capabilities.",
                        "refusal": null,
                        "role": "assistant",
                        "audio": null,
                        "function_call": null,
                        "tool_calls": null
                      }
                    }
                  ],
                  "created": 1743016348,
                  "model": "hugging-quants/Meta-Llama-3.1-70B-Instruct-AWQ-INT4",
                  "object": "chat.completion",
                  "service_tier": null,
                  "system_fingerprint": null,
                  "usage": null
                }
              },
              "text/event-stream": {}
            }
          },
          "500": {
            "description": "Internal server error or no available miners"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/web_retrieval": {
      "post": {
        "tags": [
          "GPT Endpoints"
        ],
        "summary": "Web retrieval endpoint",
        "description": "Retrieves information from the web based on a search query using multiple miners.",
        "operationId": "web_retrieval_web_retrieval_post",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api-Key"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebRetrievalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with web search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebRetrievalResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error, no available miners, or no successful miner responses"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/create-api-key/": {
      "post": {
        "tags": [
          "API Management"
        ],
        "summary": "Create Api Key",
        "description": "Creates a new API key with a specified rate limit.",
        "operationId": "create_api_key_create_api_key__post",
        "parameters": [
          {
            "name": "rate_limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rate Limit"
            }
          },
          {
            "name": "admin-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Admin-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/modify-api-key/{api_key}": {
      "put": {
        "tags": [
          "API Management"
        ],
        "summary": "Modify Api Key",
        "description": "Modifies the rate limit of an existing API key.",
        "operationId": "modify_api_key_modify_api_key__api_key__put",
        "parameters": [
          {
            "name": "api_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Api Key"
            }
          },
          {
            "name": "rate_limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rate Limit"
            }
          },
          {
            "name": "admin-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Admin-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/delete-api-key/{api_key}": {
      "delete": {
        "tags": [
          "API Management"
        ],
        "summary": "Delete Api Key",
        "description": "Deletes an existing API key.",
        "operationId": "delete_api_key_delete_api_key__api_key__delete",
        "parameters": [
          {
            "name": "api_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Api Key"
            }
          },
          {
            "name": "admin-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Admin-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health check endpoint",
        "description": "Simple endpoint to check if the API is running",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Status of the API",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CompletionsRequest": {
        "properties": {
          "uids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uids",
            "description": "List of specific miner UIDs to query. If not provided, miners will be selected automatically.",
            "example": [
              1,
              2,
              3
            ]
          },
          "messages": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Messages",
            "description": "List of message objects with 'role' and 'content' keys. Roles can be 'system', 'user', or 'assistant'.",
            "example": [
              {
                "content": "Tell me about neural networks",
                "role": "user"
              }
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Random seed for reproducible results. If not provided, a random seed will be generated.",
            "example": 42
          },
          "task": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task",
            "description": "Task identifier to choose the inference type.",
            "default": "InferenceTask",
            "example": "InferenceTask"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Model identifier to filter available miners.",
            "example": "hugging-quants/Meta-Llama-3.1-70B-Instruct-AWQ-INT4"
          },
          "test_time_inference": {
            "type": "boolean",
            "title": "Test Time Inference",
            "description": "Enable step-by-step reasoning mode that shows the model's thinking process.",
            "default": false
          },
          "mixture": {
            "type": "boolean",
            "title": "Mixture",
            "description": "Enable mixture of miners mode that combines responses from multiple miners.",
            "default": false
          },
          "sampling_parameters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sampling Parameters",
            "description": "Parameters to control text generation, such as temperature, top_p, etc.",
            "default": {
              "temperature": 0.7,
              "top_p": 0.95,
              "top_k": 50,
              "max_new_tokens": 1024,
              "do_sample": true
            },
            "example": {
              "do_sample": true,
              "max_new_tokens": 512,
              "temperature": 0.7,
              "top_k": 50,
              "top_p": 0.95
            }
          },
          "inference_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inference Mode",
            "description": "Inference mode to use for the task.",
            "example": "Reasoning-Fast"
          },
          "json_format": {
            "type": "boolean",
            "title": "Json Format",
            "description": "Enable JSON format for the response.",
            "default": false,
            "example": true
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "description": "Enable streaming for the response.",
            "default": false,
            "example": true
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "CompletionsRequest",
        "description": "Request model for the /v1/chat/completions endpoint."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WebRetrievalRequest": {
        "properties": {
          "uids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uids",
            "description": "List of specific miner UIDs to query. If not provided, miners will be selected automatically.",
            "example": [
              1,
              2,
              3
            ]
          },
          "search_query": {
            "type": "string",
            "title": "Search Query",
            "description": "The query to search for on the web.",
            "example": "latest advancements in quantum computing"
          },
          "n_miners": {
            "type": "integer",
            "minimum": 1.0,
            "title": "N Miners",
            "description": "Number of miners to query for results.",
            "default": 3,
            "example": 15
          },
          "n_results": {
            "type": "integer",
            "minimum": 1.0,
            "title": "N Results",
            "description": "Maximum number of results to return in the response.",
            "default": 1,
            "example": 5
          },
          "max_response_time": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Max Response Time",
            "description": "Maximum time to wait for responses in seconds.",
            "default": 10,
            "example": 15
          }
        },
        "type": "object",
        "required": [
          "search_query"
        ],
        "title": "WebRetrievalRequest",
        "description": "Request model for the /web_retrieval endpoint."
      },
      "WebRetrievalResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/WebSearchResult"
            },
            "type": "array",
            "title": "Results",
            "description": "List of unique web search results."
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "WebRetrievalResponse",
        "description": "Response model for the /web_retrieval endpoint."
      },
      "WebSearchResult": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL of the web page.",
            "example": "https://example.com/article"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "description": "The relevant content extracted from the page.",
            "example": "Quantum computing has seen significant advancements in the past year..."
          },
          "relevant": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relevant",
            "description": "Information about why this result is relevant to the query.",
            "example": "This article discusses the latest breakthroughs in quantum computing research."
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "WebSearchResult",
        "description": "Model for a single web search result."
      }
    }
  },
  "tags": [
    {
      "name": "GPT Endpoints",
      "description": "Endpoints for chat completions, web retrieval, and test time inference"
    },
    {
      "name": "API Management",
      "description": "Endpoints for API key management and validation"
    }
  ]
}